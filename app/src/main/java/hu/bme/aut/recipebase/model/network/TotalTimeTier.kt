/*
 * Recipebase REST API
 * Recipe database API description.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.recipebase.model.network

import com.google.gson.annotations.SerializedName
import io.swagger.annotations.ApiModelProperty
import java.lang.StringBuilder
import java.util.*

/**
 * TotalTimeTier
 */
class TotalTimeTier {
    /**
     * Get tier
     * @return tier
     */
    @get:ApiModelProperty(example = "under_15_minutes", value = "")
    @SerializedName("tier")
    var tier: String? = null

    /**
     * Get displayTier
     * @return displayTier
     */
    @get:ApiModelProperty(example = "Under 15 minutes", value = "")
    @SerializedName("display_tier")
    var displayTier: String? = null
    fun tier(tier: String?): TotalTimeTier {
        this.tier = tier
        return this
    }

    fun displayTier(displayTier: String?): TotalTimeTier {
        this.displayTier = displayTier
        return this
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val totalTimeTier = o as TotalTimeTier
        return tier == totalTimeTier.tier &&
                displayTier == totalTimeTier.displayTier
    }

    override fun hashCode(): Int {
        return Objects.hash(tier, displayTier)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class TotalTimeTier {\n")
        sb.append("    tier: ").append(toIndentedString(tier)).append("\n")
        sb.append("    displayTier: ").append(toIndentedString(displayTier)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}