/*
 * Recipebase REST API
 * Recipe database API description.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.recipebase.model.network

import com.google.gson.annotations.SerializedName
import io.swagger.annotations.ApiModelProperty
import java.lang.StringBuilder
import java.math.BigDecimal
import java.util.*

/**
 * Ingredient
 */
class Ingredient {
    /**
     * Get id
     * @return id
     */
    @get:ApiModelProperty(example = "3701.0", value = "")
    @SerializedName("id")
    var id: BigDecimal? = null

    /**
     * Get displaySingular
     * @return displaySingular
     */
    @get:ApiModelProperty(example = "bagel", value = "")
    @SerializedName("display_singular")
    var displaySingular: String? = null

    /**
     * Get updatedAt
     * @return updatedAt
     */
    @get:ApiModelProperty(example = "1.518533142E9", value = "")
    @SerializedName("updated_at")
    var updatedAt: BigDecimal? = null

    /**
     * Get name
     * @return name
     */
    @get:ApiModelProperty(example = "bagel", value = "")
    @SerializedName("name")
    var name: String? = null

    /**
     * Get createdAt
     * @return createdAt
     */
    @get:ApiModelProperty(example = "1.518533142E9", value = "")
    @SerializedName("created_at")
    var createdAt: BigDecimal? = null

    /**
     * Get displayPlural
     * @return displayPlural
     */
    @get:ApiModelProperty(example = "bagels", value = "")
    @SerializedName("display_plural")
    var displayPlural: String? = null
    fun id(id: BigDecimal?): Ingredient {
        this.id = id
        return this
    }

    fun displaySingular(displaySingular: String?): Ingredient {
        this.displaySingular = displaySingular
        return this
    }

    fun updatedAt(updatedAt: BigDecimal?): Ingredient {
        this.updatedAt = updatedAt
        return this
    }

    fun name(name: String?): Ingredient {
        this.name = name
        return this
    }

    fun createdAt(createdAt: BigDecimal?): Ingredient {
        this.createdAt = createdAt
        return this
    }

    fun displayPlural(displayPlural: String?): Ingredient {
        this.displayPlural = displayPlural
        return this
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val ingredient = o as Ingredient
        return id == ingredient.id &&
                displaySingular == ingredient.displaySingular &&
                updatedAt == ingredient.updatedAt &&
                name == ingredient.name &&
                createdAt == ingredient.createdAt &&
                displayPlural == ingredient.displayPlural
    }

    override fun hashCode(): Int {
        return Objects.hash(id, displaySingular, updatedAt, name, createdAt, displayPlural)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Ingredient {\n")
        sb.append("    id: ").append(toIndentedString(id)).append("\n")
        sb.append("    displaySingular: ").append(toIndentedString(displaySingular)).append("\n")
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n")
        sb.append("    name: ").append(toIndentedString(name)).append("\n")
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n")
        sb.append("    displayPlural: ").append(toIndentedString(displayPlural)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}