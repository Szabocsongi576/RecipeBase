/*
 * Recipebase REST API
 * Recipe database API description.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package hu.bme.aut.recipebase.network.model

import com.google.gson.annotations.SerializedName
import io.swagger.annotations.ApiModelProperty
import java.lang.StringBuilder
import java.math.BigDecimal
import java.util.*

/**
 * Section
 */
class Section {
    @SerializedName("components")
    private var components: MutableList<Component>? = null

    /**
     * Get name
     * @return name
     */
    @get:ApiModelProperty(value = "")
    @SerializedName("name")
    var name: String? = null

    /**
     * Get position
     * @return position
     */
    @get:ApiModelProperty(example = "1.0", value = "")
    @SerializedName("position")
    var position: BigDecimal? = null
    fun components(components: MutableList<Component>?): Section {
        this.components = components
        return this
    }

    fun addComponentsItem(componentsItem: Component): Section {
        if (components == null) {
            components = ArrayList()
        }
        components!!.add(componentsItem)
        return this
    }

    /**
     * Get components
     * @return components
     */
    @ApiModelProperty(value = "")
    fun getComponents(): List<Component>? {
        return components
    }

    fun setComponents(components: MutableList<Component>?) {
        this.components = components
    }

    fun name(name: String?): Section {
        this.name = name
        return this
    }

    fun position(position: BigDecimal?): Section {
        this.position = position
        return this
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val section = o as Section
        return components == section.components &&
                name == section.name &&
                position == section.position
    }

    override fun hashCode(): Int {
        return Objects.hash(components, name, position)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class Section {\n")
        sb.append("    components: ").append(toIndentedString(components)).append("\n")
        sb.append("    name: ").append(toIndentedString(name)).append("\n")
        sb.append("    position: ").append(toIndentedString(position)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}